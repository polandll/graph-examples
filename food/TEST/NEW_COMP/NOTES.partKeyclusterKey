partitionKey: something known about data community
clusteringKey: uniqueness

use UUID for single-key vertex id if there is no compelling reason to use anything else
multiple-key vertex id - bucketing
  Comcast - region/subregion, macId (this shards supernode)
  Another way to deal with this is use region/subregion as properties on a vertex, but don't create edges; 
  pull property, get vertex from property (supernode with no edges)
composite-key vertex id is not good for data locality (do I mean multiple-key perhaps?)

GeneByGene - groups by families
Intuit - creating communities (friends? families?)

celebrities - you can be friends with a celebrity, but a celebrity cannot be friends with you; otherwise, supernode problems


-- vertex label for single-key vertex id: partitionKey('bookId') for vertexLabel('book')
-- vertex label for multiple-key vertex id: partitionKey('stateId', 'cityId').clusteringKey('sensorId') for vertexLabel('fridgeSensor')
-- vertex label for composite-key vertex id: partitionKey('recipeId').clusteringKey('cuisine') for vertexLabel('recipe')

-- multiple cardinality edge label: edgeLabel('ate')

-- single cardinality property key: propertyKey('name')
-- multiple cardinality property key: propertyKey('badge'), WITH
    single cardinality meta-property: since
-- multiple cardinality property key: propertyKey('country') WITH
    multiple cardinality meta-property: startYear, endYear

PROPERTY:
to demonstrate difference in csv column name and graph property name:
property "CALORIES", "calGoal" in loading person.csv

EDGES:
person - authored (singleCard) -> book (S-K id) 
ingredient (S-K id?) - includedIn (singleCard) -> recipe (M-K id)
fridgeSensor (C-K id) - isLocatedAt (multiCard) -> home (S-K id?) [can have more than one fridge in a home]

ingredient - what vertex id for this vertex label? Adding 'category' could allow for bucketing
