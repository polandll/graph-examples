:remote config alias g newComp.g
schema.config().option('graph.allow_scan').set('true')

// IS THIS STILL REQUIRED?
// CONFIG TIMEOUT TO MAXIMUM VALUE
:remote config timeout max
// RESULT
//==>Set remote timeout to 2147483647ms

// CHECK THAT NO VERTICES EXIST
// BAD TO DO FOR LARGE GRAPHS!!
g.V().count()

// ENTER PERSON VERTEX
juliaChild = graph.addVertex(label,'person', 'name','Julia Child', 'gender','F')

// CHECK THAT ONE VERTEX NOW EXISTS
g.V().count()

// GET VALUEMAP
// BAD TO DO FOR LARGE GRAPHS!
g.V().valueMap()

// SHOW USE OF VALUES FOR ONE PROPERTY
// limit is used to get just one value back
// BAD TO DO FOR LARGE GRAPHS WITHOUT LIMIT
g.V().hasLabel('person').values('name').limit(1)

// ENTER BOOK VERTEX
artOfFrenchCookingVolOne = graph.addVertex(label, 'book','name', 'The Art of French Cooking, Vol. 1', 'publishYear', 1961)

// GET ALL BOOKS - THERE IS CURRENTLY ONLY ONE
// SAME BAD RESPONSE WITHOUT LIMIT
g.V().hasLabel('book').values('name')

// ENTER AUTHOR-BOOK EDGE
juliaChild.addEdge('authored', artOfFrenchCookingVolOne)

// CHECK THAT EDGE IS CREATED USING COUNT
// BAD TO DO FOR LARGE GRAPHS!
g.E().count()

// LOAD A SCRIPT TO ADD MORE VERTICES AND EDGES
:load '/tmp/generateRecipe.groovy'

// GET VERTEX FOR PARTICULAR PERSON
g.V().has('person', 'name','Julia Child')

// GET EDGES FROM PARTICULAR PERSON VERTEX
g.V().has('person', 'name','Julia Child').outE('authored')

// GET BOOK TITLES FOR ALL PERSONS
// Note duplication for multiple authors
g.V().outE('authored').inV().values('name')

// DEDUPLICATE THE LAST LISTING
g.V().outE('authored').inV().values('name').dedup()

// GET BOOK TITLES FOR PARTICULAR PERSON
// Uses outE() and inV() which is overkill - edge information is not needed, just passed through
g.V().has('person', 'name', 'Julia Child').outE('authored').inV().values('name')

// GET BOOK TITLES FOR PARTICULAR PERSON
// Use out() which gets next vertex
g.V().has('person', 'name', 'Julia Child').out('authored').values('name')

// GET BOOK TITLES FOR PARTICULAR AUTHOR WITH A PUBLISH DATE GREATER THAN 1967
g.V().has('person', 'name','Julia Child').out('authored').has('publishYear', gt(1967)).values('name')

// FOR EACH VERTEX LABEL, GET THE NUMBER OF VERTICES
g.V().label().groupCount()

// WRITE THE DATA TO A GRYO FILE
graph.io(gryo()).writeGraph("/tmp/recipe.gryo")
