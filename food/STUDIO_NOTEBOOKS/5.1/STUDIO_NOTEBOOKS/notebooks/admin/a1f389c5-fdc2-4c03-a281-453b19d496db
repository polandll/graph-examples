{
  "id" : "a1f389c5-fdc2-4c03-a281-453b19d496db",
  "name" : "Welcome to DataStax Studio!",
  "connectionId" : "8ed8c870-7622-431f-97a7-c0336ffde016",
  "favorite" : false,
  "cells" : [ {
    "id" : "ccf15907-4410-438b-8f97-7e6ea119de57",
    "status" : "SUCCESS",
    "code" : "Hello!\n==\n**Welcome to the DataStax Studio Tutorial Notebook.**\n\nFirst things first: If you have an error on the top of this screen then you need to configure your connection. You should take care of that first and come back here when you're ready.\n\nGot your connection all setup? Great! Lets get started with something simple to make sure things are working correctly.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Hello!</h1>\n<p><strong>Welcome to the DataStax Studio Tutorial Notebook.</strong></p>\n<p>First things first: If you have an error on the top of this screen then you need to configure your connection. You should take care of that first and come back here when you're ready.</p>\n<p>Got your connection all setup? Great! Lets get started with something simple to make sure things are working correctly.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "c8feff8f-2fb7-4fdf-8c4d-475314cecc09"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "c45a7365-027a-44e3-84f8-7e68cf96ed00",
    "status" : "SUCCESS",
    "code" : "We're going to need some data to play with. The next cell will take care of that. Don't worry too much about this code right now; you will get to that later. For now, just click the play button and when it succeeds, continue the next cell.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>We're going to need some data to play with. The next cell will take care of that. Don't worry too much about this code right now; you will get to that later. For now, just click the play button and when it succeeds, continue the next cell.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "1b3659c4-576b-4d29-876a-2857d95d7421"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "b77eb51e-dda4-49b6-bb2c-411fd5c2878b",
    "status" : "SUCCESS",
    "code" : "\n// Schema\nschema.vertexLabel('god').create();\nschema.vertexLabel('demigod').create();\nschema.vertexLabel('human').create();\nschema.vertexLabel('monster').create();\nschema.vertexLabel('location').create();\n\nschema.propertyKey('name').Text().create();\n\n// Indexes\nschema.vertexLabel('god').index('godByName').materialized().by('name').add()\nschema.vertexLabel('demigod').index('demigodByName').materialized().by('name').add()\nschema.vertexLabel('human').index('humanByName').materialized().by('name').add()\nschema.vertexLabel('monster').index('monsterByName').materialized().by('name').add()\nschema.vertexLabel('location').index('locationByName').materialized().by('name').add()\n\n// Instances - Vertices\nVertex saturn = graph.addVertex(T.label, \"titan\", \"name\", \"saturn\", \"age\", 10000);\nVertex sky = graph.addVertex(T.label, \"location\", \"name\", \"sky\");\nVertex sea = graph.addVertex(T.label, \"location\", \"name\", \"sea\");\nVertex jupiter = graph.addVertex(T.label, \"god\", \"name\", \"jupiter\", \"age\", 5000);\nVertex neptune = graph.addVertex(T.label, \"god\", \"name\", \"neptune\", \"age\", 4500);\nVertex hercules = graph.addVertex(T.label, \"demigod\", \"name\", \"hercules\", \"age\", 30);\nVertex alcmene = graph.addVertex(T.label, \"human\", \"name\", \"alcmene\", \"age\", 45);\nVertex pluto = graph.addVertex(T.label, \"god\", \"name\", \"pluto\", \"age\", 4000);\nVertex nemean = graph.addVertex(T.label, \"monster\", \"name\", \"nemean\");\nVertex hydra = graph.addVertex(T.label, \"monster\", \"name\", \"hydra\");\nVertex cerberus = graph.addVertex(T.label, \"monster\", \"name\", \"cerberus\");\nVertex tartarus = graph.addVertex(T.label, \"location\", \"name\", \"tartarus\");\n\n// Instances - Edges\njupiter.addEdge(\"father\", saturn);\njupiter.addEdge(\"lives\", sky, \"reason\", \"loves fresh breezes\");\njupiter.addEdge(\"brother\", neptune);\njupiter.addEdge(\"brother\", pluto);\n\nneptune.addEdge(\"lives\", sea).property(\"reason\", \"loves waves\");\nneptune.addEdge(\"brother\", jupiter);\nneptune.addEdge(\"brother\", pluto);\nneptune.addEdge(\"battled\", neptune).property(\"time\", java.time.Instant.ofEpochMilli(5));\n\nhercules.addEdge(\"father\", jupiter);\nhercules.addEdge(\"mother\", alcmene);\nhercules.addEdge(\"battled\", nemean, \"time\", java.time.Instant.ofEpochMilli(1), \"place\", \"POINT(38.1 23.7)\");\nhercules.addEdge(\"battled\", hydra, \"time\", java.time.Instant.ofEpochMilli(2), \"place\", \"POINT(37.7 23.9)\");\nhercules.addEdge(\"battled\", cerberus, \"time\", java.time.Instant.ofEpochMilli(12), \"place\", \"POINT(39 22)\");\n\npluto.addEdge(\"brother\", jupiter);\npluto.addEdge(\"brother\", neptune);\npluto.addEdge(\"lives\", tartarus, \"reason\", \"no fear of death\");\npluto.addEdge(\"pet\", cerberus);\n\ncerberus.addEdge(\"lives\", tartarus);\n\n\"success\"",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ "success" ],
      "type" : "STRING",
      "truncated" : false,
      "duration" : 7035,
      "id" : "0eae6a2c-63f1-4a90-88c6-04d3979f50ec"
    },
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : null
  }, {
    "id" : "81bb44d5-959d-4124-8e8e-96e00eb0cdbf",
    "status" : "SUCCESS",
    "code" : "Let's take a quick look at our entire data set. Run the next cell. You will notice that you are presented with a table view by default. You can also take a look at the Raw/JSON view (all the way to the left). Poke around a little bit, and when you're ready, continue to the next cell where we try out the Graph View.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>Let's take a quick look at our entire data set. Run the next cell. You will notice that you are presented with a table view by default. You can also take a look at the Raw/JSON view (all the way to the left). Poke around a little bit, and when you're ready, continue to the next cell where we try out the Graph View.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "a52845bc-ace9-4ed5-9248-579eb369fd68"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "0b18cf26-5e72-40bd-b9b7-6ba045c5c506",
    "status" : null,
    "code" : "g.V()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : null,
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : null
  }, {
    "id" : "115d4f1e-742e-4e95-b2f0-38107c9e7627",
    "status" : "SUCCESS",
    "code" : "The Graph View\n===\n\nLabel Templates\n---\nYou probably noticed in the previous example that the display labels for the Graph View were pretty cryptic. You can use templates to make this better. The templates use the moustache templating language. We've taken care of providing some examples for you in the next cell. Click on the settings button to see how we did it.\n\n\nQuick Tips\n---\n\n* You can zoom and pan.\n* You can double click the canvas to reset the view.\n* Properties are shown on mouseover.\n* You can select vertices and edges by clicking on them. Select multiple by holding the control/command⌘ key.\n* There is a full-screen option in the cell menu.\n* You can hide the code editor by clicking the eye in the cell menu. (In fact, we already hid the code for all these markdown cells.)\n\nFun interlude: Hide the editor, go full screen, and play around w/ the Graph view. MMMmmmm.\n",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>The Graph View</h1>\n<h2>Label Templates</h2>\n<p>You probably noticed in the previous example that the display labels for the Graph View were pretty cryptic. You can use templates to make this better. The templates use the moustache templating language. We've taken care of providing some examples for you in the next cell. Click on the settings button to see how we did it.</p>\n<h2>Quick Tips</h2>\n<ul>\n<li>You can zoom and pan.</li>\n<li>You can double click the canvas to reset the view.</li>\n<li>Properties are shown on mouseover.</li>\n<li>You can select vertices and edges by clicking on them. Select multiple by holding the control/command⌘ key.</li>\n<li>There is a full-screen option in the cell menu.</li>\n<li>You can hide the code editor by clicking the eye in the cell menu. (In fact, we already hid the code for all these markdown cells.)</li>\n</ul>\n<p>Fun interlude: Hide the editor, go full screen, and play around w/ the Graph view. MMMmmmm.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "fe516b88-48b7-4f4b-abf8-81b950cc18f1"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "99b09995-0b40-4785-8a95-780505fb158d",
    "status" : "SUCCESS",
    "code" : "g.V()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "id" : "demigod:379107:6:0",
        "label" : "demigod",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "hercules"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 30
          } ]
        }
      }, {
        "id" : "titan:379107:1:0",
        "label" : "titan",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "saturn"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 10000
          } ]
        }
      }, {
        "id" : "location:379107:12:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "tartarus"
          } ]
        }
      }, {
        "id" : "location:379107:3:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "sea"
          } ]
        }
      }, {
        "id" : "location:379107:2:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "sky"
          } ]
        }
      }, {
        "id" : "human:379107:7:0",
        "label" : "human",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "alcmene"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 45
          } ]
        }
      }, {
        "id" : "god:379107:5:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "neptune"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 4500
          } ]
        }
      }, {
        "id" : "god:379107:4:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "jupiter"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 5000
          } ]
        }
      }, {
        "id" : "god:379107:8:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "pluto"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 4000
          } ]
        }
      }, {
        "id" : "monster:379107:11:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "cerberus"
          } ]
        }
      }, {
        "id" : "monster:379107:10:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "hydra"
          } ]
        }
      }, {
        "id" : "monster:379107:9:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "nemean"
          } ]
        }
      } ],
      "type" : "VERTEX",
      "truncated" : false,
      "duration" : 0,
      "graph" : {
        "vertices" : [ {
          "id" : "god:379107:5:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "neptune"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 4500
            } ]
          }
        }, {
          "id" : "location:379107:2:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "sky"
            } ]
          }
        }, {
          "id" : "monster:379107:9:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "nemean"
            } ]
          }
        }, {
          "id" : "titan:379107:1:0",
          "label" : "titan",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "saturn"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 10000
            } ]
          }
        }, {
          "id" : "god:379107:4:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "jupiter"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 5000
            } ]
          }
        }, {
          "id" : "god:379107:8:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "pluto"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 4000
            } ]
          }
        }, {
          "id" : "demigod:379107:6:0",
          "label" : "demigod",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "hercules"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 30
            } ]
          }
        }, {
          "id" : "monster:379107:11:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "cerberus"
            } ]
          }
        }, {
          "id" : "monster:379107:10:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "hydra"
            } ]
          }
        }, {
          "id" : "location:379107:12:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "tartarus"
            } ]
          }
        }, {
          "id" : "human:379107:7:0",
          "label" : "human",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "alcmene"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 45
            } ]
          }
        }, {
          "id" : "location:379107:3:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "sea"
            } ]
          }
        } ],
        "edges" : [ {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb2741-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:8:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7562-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, ~type=pet}",
          "label" : "pet",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "god",
          "inV" : "monster:379107:11:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e50-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "demigod",
          "inV" : "god:379107:4:0",
          "outV" : "demigod:379107:6:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7560-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb0030-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "titan",
          "outVLabel" : "god",
          "inV" : "titan:379107:1:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2742-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:3:0",
          "outV" : "god:379107:5:0",
          "properties" : {
            "reason" : "loves waves"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb2740-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e52-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:9:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.001Z",
            "place" : "POINT(38.1 23.7)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2743-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:4:0",
          "outV" : "god:379107:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7561-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:12:0",
          "outV" : "god:379107:8:0",
          "properties" : {
            "reason" : "no fear of death"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e54-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:11:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.012Z",
            "place" : "POINT(39 22)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb0031-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:2:0",
          "outV" : "god:379107:4:0",
          "properties" : {
            "reason" : "loves fresh breezes"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e53-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:10:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.002Z",
            "place" : "POINT(37.7 23.9)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb4e55-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:4:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=4dbb7563-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "monster",
          "inV" : "location:379107:12:0",
          "outV" : "monster:379107:11:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2745-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:5:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.005Z"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2744-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:8:0",
          "outV" : "god:379107:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e51-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, ~type=mother}",
          "label" : "mother",
          "type" : "edge",
          "inVLabel" : "human",
          "outVLabel" : "demigod",
          "inV" : "human:379107:7:0",
          "outV" : "demigod:379107:6:0"
        } ]
      },
      "id" : "53f3f4c7-0fa5-4307-9c70-09780641205b"
    },
    "msg" : null,
    "dataViewType" : "GRAPH",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      },
      "GRAPH" : {
        "labelTemplates" : {
          "monster" : "{{label}} {{name}}",
          "god" : "I am the almighty {{name}}",
          "demigod" : "{{label}} {{name}}",
          "human" : "{{label}} {{name}}",
          "location" : "The {{name}}",
          "titan" : "{{label}} {{name}}"
        },
        "defaultLabelTemplate" : "{{label}}[{{id}}]",
        "requestId" : "53f3f4c7-0fa5-4307-9c70-09780641205b",
        "positions" : {
          "god:379107:5:0" : {
            "x" : -302,
            "y" : 140
          },
          "location:379107:2:0" : {
            "x" : 98,
            "y" : 219
          },
          "monster:379107:9:0" : {
            "x" : 45,
            "y" : -156
          },
          "titan:379107:1:0" : {
            "x" : -102,
            "y" : 265
          },
          "god:379107:4:0" : {
            "x" : -72,
            "y" : -39
          },
          "god:379107:8:0" : {
            "x" : -338,
            "y" : -168
          },
          "demigod:379107:6:0" : {
            "x" : 153,
            "y" : 114
          },
          "monster:379107:11:0" : {
            "x" : -57,
            "y" : -145
          },
          "monster:379107:10:0" : {
            "x" : 452,
            "y" : 90
          },
          "location:379107:12:0" : {
            "x" : -173,
            "y" : -435
          },
          "human:379107:7:0" : {
            "x" : 278,
            "y" : -155
          },
          "location:379107:3:0" : {
            "x" : -585,
            "y" : 227
          }
        },
        "position" : {
          "x" : -54.04751646699759,
          "y" : -77.06510859840287
        },
        "scale" : 0.49876463677842925
      },
      "CODE" : {
        "hidden" : false
      }
    }
  }, {
    "id" : "8bb68d9a-7a07-414d-a7d9-3b0649a0d3b2",
    "status" : "SUCCESS",
    "code" : "***What do the colors mean?***\n\n**Vertices** are colored by community. **Edges** inherit color from their vertices. The communites are calculated using a community detection algorithm (Louvain, to be specific). In the future we'll have more options for applying color.\n",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p><strong><em>What do the colors mean?</em></strong></p>\n<p><strong>Vertices</strong> are colored by community. <strong>Edges</strong> inherit color from their vertices. The communites are calculated using a community detection algorithm (Louvain, to be specific). In the future we'll have more options for applying color.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "5f5a8de3-62f0-49f4-b056-2f450aeb2443"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "71a64b13-a791-4312-8bc7-f41de5aa183d",
    "status" : "SUCCESS",
    "code" : "Neighborhood Visualization\n--------------------------\nIt's pretty common to want to see the neighborhood for a single vertex. Check out the next cell where we take a look at Pluto's 1st degree neighborhood.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h2>Neighborhood Visualization</h2>\n<p>It's pretty common to want to see the neighborhood for a single vertex. Check out the next cell where we take a look at Pluto's 1st degree neighborhood.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "0fb344bc-d0d2-4cb4-a20e-dbc2dcd3245f"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "22c329e4-754c-4575-b517-5f61327ce98e",
    "status" : "SUCCESS",
    "code" : "g.V().hasLabel('god').has('name', 'pluto').bothE()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29592-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, ~type=lives}",
        "label" : "lives",
        "type" : "edge",
        "inVLabel" : "location",
        "outVLabel" : "god",
        "inV" : "location:31823:11:0",
        "outV" : "god:31823:7:0",
        "properties" : {
          "reason" : "no fear of death"
        }
      }, {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29590-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, ~type=brother}",
        "label" : "brother",
        "type" : "edge",
        "inVLabel" : "god",
        "outVLabel" : "god",
        "inV" : "god:31823:3:0",
        "outV" : "god:31823:7:0"
      }, {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29591-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=brother}",
        "label" : "brother",
        "type" : "edge",
        "inVLabel" : "god",
        "outVLabel" : "god",
        "inV" : "god:31823:4:0",
        "outV" : "god:31823:7:0"
      }, {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=1ebe7150-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, ~type=brother}",
        "label" : "brother",
        "type" : "edge",
        "inVLabel" : "god",
        "outVLabel" : "god",
        "inV" : "god:31823:7:0",
        "outV" : "god:31823:3:0"
      }, {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec35351-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, ~type=brother}",
        "label" : "brother",
        "type" : "edge",
        "inVLabel" : "god",
        "outVLabel" : "god",
        "inV" : "god:31823:7:0",
        "outV" : "god:31823:4:0"
      }, {
        "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed50690-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, ~type=pet}",
        "label" : "pet",
        "type" : "edge",
        "inVLabel" : "monster",
        "outVLabel" : "god",
        "inV" : "monster:31823:10:0",
        "outV" : "god:31823:7:0"
      } ],
      "type" : "EDGE",
      "truncated" : false,
      "duration" : 0,
      "graph" : {
        "vertices" : [ {
          "id" : "god:31823:7:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "pluto"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 4000
            } ]
          }
        }, {
          "id" : "god:31823:3:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "jupiter"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 5000
            } ]
          }
        }, {
          "id" : "monster:31823:10:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "cerberus"
            } ]
          }
        }, {
          "id" : "location:31823:11:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "tartarus"
            } ]
          }
        }, {
          "id" : "god:31823:4:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "neptune"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 4500
            } ]
          }
        } ],
        "edges" : [ {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=1ebe4a40-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:4:0",
          "outV" : "god:31823:3:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, local_id=1ed52da0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "monster",
          "inV" : "location:31823:11:0",
          "outV" : "monster:31823:10:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec723e0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:4:0",
          "outV" : "god:31823:4:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.005Z"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec35350-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:3:0",
          "outV" : "god:31823:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=1ebe7150-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:7:0",
          "outV" : "god:31823:3:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed50690-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, ~type=pet}",
          "label" : "pet",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "god",
          "inV" : "monster:31823:10:0",
          "outV" : "god:31823:7:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29590-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:3:0",
          "outV" : "god:31823:7:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29591-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:4:0",
          "outV" : "god:31823:7:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, local_id=1ed29592-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:31823:11:0",
          "outV" : "god:31823:7:0",
          "properties" : {
            "reason" : "no fear of death"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec35351-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=7}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:7:0",
          "outV" : "god:31823:4:0"
        } ]
      },
      "id" : "f2a7c3b0-e707-405b-98a5-3416d14f5827"
    },
    "msg" : null,
    "dataViewType" : "GRAPH",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      },
      "GRAPH" : {
        "labelTemplates" : {
          "monster" : "",
          "god" : "",
          "demigod" : "{{name}}",
          "human" : "{{name}}"
        },
        "defaultLabelTemplate" : "{{name}} ({{label}})",
        "requestId" : "f2a7c3b0-e707-405b-98a5-3416d14f5827",
        "positions" : {
          "god:31823:7:0" : {
            "x" : -409,
            "y" : -28
          },
          "god:31823:3:0" : {
            "x" : -513,
            "y" : 209
          },
          "monster:31823:10:0" : {
            "x" : -118,
            "y" : 80
          },
          "location:31823:11:0" : {
            "x" : -47,
            "y" : -88
          },
          "god:31823:4:0" : {
            "x" : -691,
            "y" : -72
          }
        },
        "position" : {
          "x" : -363.4305188249457,
          "y" : 68.3186126025447
        },
        "scale" : 1.0000077319873382
      }
    }
  }, {
    "id" : "fcde13d5-9756-430f-b3b3-15b0967f13d2",
    "status" : "SUCCESS",
    "code" : "Sometimes it is more interesting to view a neighborhood with the ego vertex removed. After all, we know that vertex is connected to the others in the view. Plus this usually makes the community structure of the neighborhood graph more apparent. \n\nStudio makes this easy by automatically populating all shared edges for you. **You grab the vertices you're interested in, and the edges are populated in the Graph View automatically.**",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>Sometimes it is more interesting to view a neighborhood with the ego vertex removed. After all, we know that vertex is connected to the others in the view. Plus this usually makes the community structure of the neighborhood graph more apparent.</p>\n<p>Studio makes this easy by automatically populating all shared edges for you. <strong>You grab the vertices you're interested in, and the edges are populated in the Graph View automatically.</strong></p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "3a8fe09d-f076-4f37-91b6-aeb7feda102e"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "38fc88b9-00e3-4589-870b-e26f0e95ea32",
    "status" : "SUCCESS",
    "code" : "g.V().hasLabel('god').has('name', 'pluto').both().has('name', neq('pluto'))\n// Note:        The 2nd has filter --^ prevents the ego vertex from being emitted when traversing self-referencing edges",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "id" : "location:31823:11:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "tartarus"
          } ]
        }
      }, {
        "id" : "god:31823:3:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "jupiter"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
            "value" : 5000
          } ]
        }
      }, {
        "id" : "god:31823:4:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "neptune"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
            "value" : 4500
          } ]
        }
      }, {
        "id" : "god:31823:3:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "jupiter"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
            "value" : 5000
          } ]
        }
      }, {
        "id" : "god:31823:4:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "neptune"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
            "value" : 4500
          } ]
        }
      }, {
        "id" : "monster:31823:10:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
            "value" : "cerberus"
          } ]
        }
      } ],
      "type" : "VERTEX",
      "truncated" : false,
      "duration" : 0,
      "graph" : {
        "vertices" : [ {
          "id" : "god:31823:3:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "jupiter"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 5000
            } ]
          }
        }, {
          "id" : "monster:31823:10:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "cerberus"
            } ]
          }
        }, {
          "id" : "location:31823:11:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "tartarus"
            } ]
          }
        }, {
          "id" : "god:31823:4:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "neptune"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 4500
            } ]
          }
        } ],
        "edges" : [ {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=1ebe4a40-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:4:0",
          "outV" : "god:31823:3:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=monster, group_id=10}, local_id=1ed52da0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=location, group_id=11}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "monster",
          "inV" : "location:31823:11:0",
          "outV" : "monster:31823:10:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec723e0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:4:0",
          "outV" : "god:31823:4:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.005Z"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=4}, local_id=1ec35350-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:31823:3:0",
          "outV" : "god:31823:4:0"
        } ]
      },
      "id" : "36808ac4-b874-4369-86a2-6692fb579e0a"
    },
    "msg" : null,
    "dataViewType" : "GRAPH",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      },
      "GRAPH" : {
        "labelTemplates" : {
          "god" : ""
        },
        "defaultLabelTemplate" : "{{label}} {{name}}",
        "requestId" : "36808ac4-b874-4369-86a2-6692fb579e0a",
        "positions" : {
          "god:31823:3:0" : {
            "x" : 28,
            "y" : 135
          },
          "monster:31823:10:0" : {
            "x" : -140,
            "y" : 130
          },
          "location:31823:11:0" : {
            "x" : -28,
            "y" : -184
          },
          "god:31823:4:0" : {
            "x" : 92,
            "y" : -119
          }
        },
        "position" : {
          "x" : -31.637445805954258,
          "y" : -16.79230733913903
        },
        "scale" : 1
      }
    }
  }, {
    "id" : "b8893f32-c275-4816-9d12-72a98dcb793c",
    "status" : "SUCCESS",
    "code" : "Paths and Subgraphs\n===\nIt is common to want to examine a subset of the graph based on a particular Edge Label, a set of Edge Labels, or a specific set of edges. In the following cell we take a look at the family tree of Hercules. This technique is useful for visualizing subgraphs of a particular type.\n\nThis same technique can be used to examine paths, or network walks. After all, a path is really just a subgraph when you include the vertices.\n\n*Note: As mentioned earlier, Studio will automatically populate all shared edges between vertices in a result. However, when you retrieve a subgraph, Studio assumes you grabed exactly what you want, and does not augment the result.*",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Paths and Subgraphs</h1>\n<p>It is common to want to examine a subset of the graph based on a particular Edge Label, a set of Edge Labels, or a specific set of edges. In the following cell we take a look at the family tree of Hercules. This technique is useful for visualizing subgraphs of a particular type.</p>\n<p>This same technique can be used to examine paths, or network walks. After all, a path is really just a subgraph when you include the vertices.</p>\n<p><em>Note: As mentioned earlier, Studio will automatically populate all shared edges between vertices in a result. However, when you retrieve a subgraph, Studio assumes you grabed exactly what you want, and does not augment the result.</em></p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "050061b9-42ce-442a-b1f2-4b2cd27242c2"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "df2c0d20-95f3-49e2-bfc0-a94833f90ba5",
    "status" : "SUCCESS",
    "code" : "// \"Starting from the hercules vertex, repeatedly traverse mother and father edges. Store the mother and father edges in the subgraph named 'sg'. Lastly, emit the subgraph via cap() Step.\"\ng.V().hasLabel('demigod').has('name', 'hercules').repeat(outE('mother', 'father').subgraph('sg').otherV()).cap('sg')",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "vertices" : [ {
          "id" : "human:31823:6:0",
          "label" : "human",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=human, group_id=6}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "alcmene"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=human, group_id=6}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 45
            } ]
          }
        }, {
          "id" : "god:31823:3:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "jupiter"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 5000
            } ]
          }
        }, {
          "id" : "titan:31823:12:0",
          "label" : "titan",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=titan, group_id=12}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "saturn"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=titan, group_id=12}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 10000
            } ]
          }
        }, {
          "id" : "demigod:31823:5:0",
          "label" : "demigod",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=demigod, group_id=5}, local_id=00000000-0000-8008-0000-000000000000, ~type=name}",
              "value" : "hercules"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=31823, ~label=demigod, group_id=5}, local_id=00000000-0000-800e-0000-000000000000, ~type=age}",
              "value" : 30
            } ]
          }
        } ],
        "edges" : [ {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=demigod, group_id=5}, local_id=1ecf1320-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "demigod",
          "inV" : "god:31823:3:0",
          "outV" : "demigod:31823:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=demigod, group_id=5}, local_id=1ed099c0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=human, group_id=6}, ~type=mother}",
          "label" : "mother",
          "type" : "edge",
          "inVLabel" : "human",
          "outVLabel" : "demigod",
          "inV" : "human:31823:6:0",
          "outV" : "demigod:31823:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=31823, ~label=god, group_id=3}, local_id=1eb5e5d0-ede1-11e5-9db3-19a1a24a6b4c, in_vertex={member_id=0, community_id=31823, ~label=titan, group_id=12}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "titan",
          "outVLabel" : "god",
          "inV" : "titan:31823:12:0",
          "outV" : "god:31823:3:0"
        } ]
      } ],
      "type" : "GRAPH",
      "truncated" : false,
      "duration" : 0,
      "id" : "9a5fea2a-0c09-4b8f-995b-4a71cffad2ab"
    },
    "msg" : null,
    "dataViewType" : "GRAPH",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      },
      "GRAPH" : {
        "labelTemplates" : { },
        "defaultLabelTemplate" : "{{name}} ({{label}})",
        "requestId" : "9a5fea2a-0c09-4b8f-995b-4a71cffad2ab",
        "positions" : {
          "human:31823:6:0" : {
            "x" : -454,
            "y" : 149
          },
          "god:31823:3:0" : {
            "x" : -84,
            "y" : 91
          },
          "titan:31823:12:0" : {
            "x" : 92,
            "y" : -137
          },
          "demigod:31823:5:0" : {
            "x" : -296,
            "y" : 328
          }
        },
        "position" : {
          "x" : -185.88543854806028,
          "y" : 102.64926932208269
        },
        "scale" : 0.7325380016076227
      },
      "CODE" : {
        "hidden" : false
      }
    }
  }, {
    "id" : "e6ee1d3c-9fa7-478d-a54b-7643d70fb182",
    "status" : "SUCCESS",
    "code" : "Syntax Validation\n=================\n\nStudio will automatcally detect syntax errors for you. This is demonstrated in the following cell. Syntax validation can also be disabled from the cell menu bar. ",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Syntax Validation</h1>\n<p>Studio will automatcally detect syntax errors for you. This is demonstrated in the following cell. Syntax validation can also be disabled from the cell menu bar.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "681c9b7f-ab19-48b0-b66e-1e4ed77499f5"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "01b202ee-60c1-4bbe-a7e8-0e9f7efdb5f1",
    "status" : null,
    "code" : "g.V.both()     // missing ()'s on V.\ng.V().has(123) // invalid argument type",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : null,
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : null
  }, {
    "id" : "9e1aa439-2b2b-438f-8414-9906be28fc5d",
    "status" : "SUCCESS",
    "code" : "Content Assist\n==============\nLike most advanced editors, Studio provides content assist. If you're new to Gremlin then this can be really helpful. Position your cursor at the end of the following statement and press ctrl+spc to see some suggestions.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Content Assist</h1>\n<p>Like most advanced editors, Studio provides content assist. If you're new to Gremlin then this can be really helpful. Position your cursor at the end of the following statement and press ctrl+spc to see some suggestions.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "bd6f6881-1d0a-4b56-ab4a-5bc1c5f4129e"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "fb9b56d7-c319-4c21-872a-125f7fb349e6",
    "status" : null,
    "code" : "g.V().both().\n",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : null,
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : null
  }, {
    "id" : "51b907ad-eabd-4c1f-81bf-fa7a71cdbbcc",
    "status" : "SUCCESS",
    "code" : "Schema-Aware Content Assist\n---------------------------\nStudio also provides contextual \"schema aware\" content assist. In other words, Studio examines the schema and suggests Vertex/Edge Labels and Property Keys based on the underlying graph schema.\n\nPosition your cursor at the end of the following statements and press ctrl/cmd+spc to see the schema-driven suggestions.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h2>Schema-Aware Content Assist</h2>\n<p>Studio also provides contextual &ldquo;schema aware&rdquo; content assist. In other words, Studio examines the schema and suggests Vertex/Edge Labels and Property Keys based on the underlying graph schema.</p>\n<p>Position your cursor at the end of the following statements and press ctrl/cmd+spc to see the schema-driven suggestions.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "e06bf468-4aaf-448e-995f-7b8340f1eff0"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "af50304b-72df-4c71-a0f9-228ef622d9a0",
    "status" : null,
    "code" : "g.V().hasLabel(\ng.V().bothE(\n\n// Notice that in this example the Edge Labels are filtered to include only edges adjacent to demigod. How cool is that!?\ng.V().hasLabel('demigod').bothE(",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : null,
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : {
      "VALIDATIONS" : {
        "enabled" : false
      },
      "CODE" : {
        "hidden" : false
      }
    }
  }, {
    "id" : "9a709fba-ded4-42ff-8631-f86ff0acc6e7",
    "status" : "SUCCESS",
    "code" : "Schema View\n====\nWhile we're on the topic of the schema, lets check out the schema view! It shows you what's connected and how. The button is in the very top right corner of the notebook. Try it out.\n\nQuick tips:\n* Properties, indexes, TTL's, and partitions are shown on mouseover. The details panel can be pinned via click.\n* You can double-click a Vertex Label to check out it's adajencies in a hierarchical view. Double-click any blank cavas area to return to the normal view.\n* You can zoom and pan just like you can in the Graph View. Double-click the canvas to reset the view if things get too wild.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Schema View</h1>\n<p>While we're on the topic of the schema, lets check out the schema view! It shows you what's connected and how. The button is in the very top right corner of the notebook. Try it out.</p>\n<p>Quick tips:</p>\n<ul>\n<li>Properties, indexes, TTL's, and partitions are shown on mouseover. The details panel can be pinned via click.</li>\n<li>You can double-click a Vertex Label to check out it's adajencies in a hierarchical view. Double-click any blank cavas area to return to the normal view.</li>\n<li>You can zoom and pan just like you can in the Graph View. Double-click the canvas to reset the view if things get too wild.</li>\n</ul>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "07330ab6-de12-4309-bb0c-149fbc942c29"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "0a77568b-22a3-4144-9fe0-4cbf46eeb168",
    "status" : "SUCCESS",
    "code" : "Profiling\n=========\n\nGremlin provides the ability to profile traversals. Metrics are gathered for the duration taken by each step and the number of Traversers emitted by that step. This can be very useful for quickly spotting bottlenecks in a Traversal.\n\nQuick tips:\n* Each top-level row corresponds to a Step in the Traversal. Keep in mind that the Traversal may be optimized at this point. In this case you can see that *g.V().hasLabel('demigod').has('name', 'pluto')* has all been combined into a single step.\n* Mouse-over the duration bars to see the detailed metrics for that row.\n* Index utilization is one of the most critical aspects to a Traversals performance. Inspect this in the 'iterator-setup' rows. If that step leveraged an index then 'isFitted' will be true.\n",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Profiling</h1>\n<p>Gremlin provides the ability to profile traversals. Metrics are gathered for the duration taken by each step and the number of Traversers emitted by that step. This can be very useful for quickly spotting bottlenecks in a Traversal.</p>\n<p>Quick tips:</p>\n<ul>\n<li>Each top-level row corresponds to a Step in the Traversal. Keep in mind that the Traversal may be optimized at this point. In this case you can see that <em>g.V().hasLabel('demigod').has('name', 'pluto')</em> has all been combined into a single step.</li>\n<li>Mouse-over the duration bars to see the detailed metrics for that row.</li>\n<li>Index utilization is one of the most critical aspects to a Traversals performance. Inspect this in the 'iterator-setup' rows. If that step leveraged an index then 'isFitted' will be true.</li>\n</ul>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "fd393349-03b1-4a61-a28e-c2b72e7ce7b7"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "e04e3060-da27-41b4-925f-8a0c97e1ef7d",
    "status" : "SUCCESS",
    "code" : "g.V().hasLabel('demigod').has('name', 'pluto').both().count().profile().cap(TraversalMetrics.METRICS_KEY)",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "dur" : 4.406305,
        "metrics" : [ {
          "dur" : 4.131944,
          "counts" : {
            "traverserCount" : 0,
            "elementCount" : 0
          },
          "name" : "DsegGraphStep([~label.eq(demigod), name.eq(pluto)])",
          "annotations" : {
            "percentDur" : 93.7734450974229
          },
          "id" : "9.0.0()",
          "metrics" : [ {
            "dur" : 0.474298,
            "counts" : {
              "limit" : 2147483647,
              "numQNFclauses" : 1,
              "numQueries" : 1
            },
            "name" : "query-optimizer",
            "annotations" : {
              "condition" : "(((schema[demigod]) & (true)) & name = pluto)"
            },
            "id" : "9.0.0().query-optimizer[0]"
          }, {
            "dur" : 0.031736,
            "counts" : { },
            "name" : "iterator-setup",
            "annotations" : {
              "isFitted" : "true",
              "isSorted" : "false"
            },
            "id" : "9.0.0().iterator-setup[0]"
          } ]
        }, {
          "dur" : 0.0309,
          "counts" : {
            "traverserCount" : 0,
            "elementCount" : 0
          },
          "name" : "DsegVertexStep(BOTH,edge)",
          "annotations" : {
            "percentDur" : 0.7012678423304787
          },
          "id" : "8.0.0()"
        }, {
          "dur" : 0.135495,
          "counts" : {
            "traverserCount" : 1,
            "elementCount" : 1
          },
          "name" : "CountGlobalStep",
          "annotations" : {
            "percentDur" : 3.075025446490881
          },
          "id" : "4.0.0()"
        }, {
          "dur" : 0.107966,
          "counts" : {
            "traverserCount" : 1,
            "elementCount" : 1
          },
          "name" : "SideEffectCapStep([~metrics])",
          "annotations" : {
            "percentDur" : 2.4502616137557434
          },
          "id" : "6.0.0()"
        } ]
      } ],
      "type" : "PROFILE",
      "truncated" : false,
      "duration" : 0,
      "id" : "4bd1e198-b2af-42bf-b338-3c79caf49d2c"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : null
  }, {
    "id" : "21b17157-b7ee-4514-ae33-c529acd833d1",
    "status" : "SUCCESS",
    "code" : "Charts\n===\n\nLets switch gears a little bit and do some charting. We went ahead and created an example for you in the next cell. We're using the Gremlin groupCount()-Step in this example. Charting and groupCount() are a very powerful combination. Take a look at the Raw View to see how the results translate into the bar chart.\n\nThe domain and range axis assignments are detected automatically for this particular result type.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Charts</h1>\n<p>Lets switch gears a little bit and do some charting. We went ahead and created an example for you in the next cell. We're using the Gremlin groupCount()-Step in this example. Charting and groupCount() are a very powerful combination. Take a look at the Raw View to see how the results translate into the bar chart.</p>\n<p>The domain and range axis assignments are detected automatically for this particular result type.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "4b87f72b-4784-42b7-80d2-509d65734aa9"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "2d9a6718-94cd-48f2-936a-96e8092f7801",
    "status" : "SUCCESS",
    "code" : "g.V().groupCount().by(label)",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "demigod" : 1,
        "titan" : 1,
        "location" : 3,
        "human" : 1,
        "god" : 3,
        "monster" : 3
      } ],
      "type" : "MAP",
      "truncated" : false,
      "duration" : 0,
      "id" : "aa43188f-2709-4e01-ba59-ac8b74afda9a"
    },
    "msg" : null,
    "dataViewType" : "BAR",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : "__domain",
        "yAxis" : "__range"
      }
    }
  }, {
    "id" : "89d8c6fe-ef1e-4e6e-8108-b7b1e715f4e9",
    "status" : "SUCCESS",
    "code" : "**Now it's your turn.** Studio can chart a wide variety of data, but you typically need to specify the domain and range for the chart (i.e. how to map values onto axis and data series). In the next cell, click on the Bar Chart button and select 'NAME' for the x axis and 'AGE' for the y axis.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p><strong>Now it's your turn.</strong> Studio can chart a wide variety of data, but you typically need to specify the domain and range for the chart (i.e. how to map values onto axis and data series). In the next cell, click on the Bar Chart button and select 'NAME' for the x axis and 'AGE' for the y axis.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "ab1ac929-2b2c-440b-8b40-41aa10a1d29b"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "c87355a9-9435-4ffb-a815-34116c1d44d2",
    "status" : "SUCCESS",
    "code" : "g.V()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "id" : "demigod:379107:6:0",
        "label" : "demigod",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "hercules"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 30
          } ]
        }
      }, {
        "id" : "titan:379107:1:0",
        "label" : "titan",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "saturn"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 10000
          } ]
        }
      }, {
        "id" : "location:379107:12:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "tartarus"
          } ]
        }
      }, {
        "id" : "location:379107:3:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "sea"
          } ]
        }
      }, {
        "id" : "location:379107:2:0",
        "label" : "location",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "sky"
          } ]
        }
      }, {
        "id" : "human:379107:7:0",
        "label" : "human",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "alcmene"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 45
          } ]
        }
      }, {
        "id" : "god:379107:5:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "neptune"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 4500
          } ]
        }
      }, {
        "id" : "god:379107:4:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "jupiter"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 5000
          } ]
        }
      }, {
        "id" : "god:379107:8:0",
        "label" : "god",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "pluto"
          } ],
          "age" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
            "value" : 4000
          } ]
        }
      }, {
        "id" : "monster:379107:11:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "cerberus"
          } ]
        }
      }, {
        "id" : "monster:379107:10:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "hydra"
          } ]
        }
      }, {
        "id" : "monster:379107:9:0",
        "label" : "monster",
        "type" : "vertex",
        "properties" : {
          "name" : [ {
            "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
            "value" : "nemean"
          } ]
        }
      } ],
      "type" : "VERTEX",
      "truncated" : false,
      "duration" : 0,
      "graph" : {
        "vertices" : [ {
          "id" : "god:379107:5:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "neptune"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 4500
            } ]
          }
        }, {
          "id" : "location:379107:2:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "sky"
            } ]
          }
        }, {
          "id" : "monster:379107:9:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "nemean"
            } ]
          }
        }, {
          "id" : "titan:379107:1:0",
          "label" : "titan",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "saturn"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 10000
            } ]
          }
        }, {
          "id" : "god:379107:4:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "jupiter"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 5000
            } ]
          }
        }, {
          "id" : "god:379107:8:0",
          "label" : "god",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "pluto"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 4000
            } ]
          }
        }, {
          "id" : "demigod:379107:6:0",
          "label" : "demigod",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "hercules"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 30
            } ]
          }
        }, {
          "id" : "monster:379107:11:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "cerberus"
            } ]
          }
        }, {
          "id" : "monster:379107:10:0",
          "label" : "monster",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "hydra"
            } ]
          }
        }, {
          "id" : "location:379107:12:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "tartarus"
            } ]
          }
        }, {
          "id" : "human:379107:7:0",
          "label" : "human",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "alcmene"
            } ],
            "age" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, local_id=00000000-0000-8003-0000-000000000000, ~type=age}",
              "value" : 45
            } ]
          }
        }, {
          "id" : "location:379107:3:0",
          "label" : "location",
          "type" : "vertex",
          "properties" : {
            "name" : [ {
              "id" : "{out_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, local_id=00000000-0000-8002-0000-000000000000, ~type=name}",
              "value" : "sea"
            } ]
          }
        } ],
        "edges" : [ {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb2741-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:8:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7562-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, ~type=pet}",
          "label" : "pet",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "god",
          "inV" : "monster:379107:11:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e50-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "demigod",
          "inV" : "god:379107:4:0",
          "outV" : "demigod:379107:6:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7560-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb0030-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=titan, group_id=1}, ~type=father}",
          "label" : "father",
          "type" : "edge",
          "inVLabel" : "titan",
          "outVLabel" : "god",
          "inV" : "titan:379107:1:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2742-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=3}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:3:0",
          "outV" : "god:379107:5:0",
          "properties" : {
            "reason" : "loves waves"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb2740-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:4:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e52-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=9}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:9:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.001Z",
            "place" : "POINT(38.1 23.7)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2743-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:4:0",
          "outV" : "god:379107:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb7561-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:12:0",
          "outV" : "god:379107:8:0",
          "properties" : {
            "reason" : "no fear of death"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e54-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:11:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.012Z",
            "place" : "POINT(39 22)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, local_id=4dbb0031-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=2}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "god",
          "inV" : "location:379107:2:0",
          "outV" : "god:379107:4:0",
          "properties" : {
            "reason" : "loves fresh breezes"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e53-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=monster, group_id=10}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "monster",
          "outVLabel" : "demigod",
          "inV" : "monster:379107:10:0",
          "outV" : "demigod:379107:6:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.002Z",
            "place" : "POINT(37.7 23.9)"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, local_id=4dbb4e55-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=4}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:4:0",
          "outV" : "god:379107:8:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=monster, group_id=11}, local_id=4dbb7563-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=location, group_id=12}, ~type=lives}",
          "label" : "lives",
          "type" : "edge",
          "inVLabel" : "location",
          "outVLabel" : "monster",
          "inV" : "location:379107:12:0",
          "outV" : "monster:379107:11:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2745-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, ~type=battled}",
          "label" : "battled",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:5:0",
          "outV" : "god:379107:5:0",
          "properties" : {
            "time" : "1970-01-01T00:00:00.005Z"
          }
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=god, group_id=5}, local_id=4dbb2744-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=god, group_id=8}, ~type=brother}",
          "label" : "brother",
          "type" : "edge",
          "inVLabel" : "god",
          "outVLabel" : "god",
          "inV" : "god:379107:8:0",
          "outV" : "god:379107:5:0"
        }, {
          "id" : "{out_vertex={member_id=0, community_id=379107, ~label=demigod, group_id=6}, local_id=4dbb4e51-ed47-11e5-bfbd-3d55e00a4411, in_vertex={member_id=0, community_id=379107, ~label=human, group_id=7}, ~type=mother}",
          "label" : "mother",
          "type" : "edge",
          "inVLabel" : "human",
          "outVLabel" : "demigod",
          "inV" : "human:379107:7:0",
          "outV" : "demigod:379107:6:0"
        } ]
      },
      "id" : "11f7ea93-48d7-404c-a663-4377934bc7fa"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      }
    }
  }, {
    "id" : "37f28bfb-004b-4263-a1b2-99d0daee4df4",
    "status" : "SUCCESS",
    "code" : "Let's try something even more interesting. In the next cell we are charting the degree distribution for the entire graph.\n\nSome things to keep in mind:\n\n* This can be an expensive operation on large graphs. If you have DSE Analytics and a large dataset then this type of operation would be best executed using Spark/OLAP.\n* We're sampling the result in the following cell to make things manageable in the confines of the browser. This makes no difference for our example dataset, but it will come in handy when you start analyzing larger graphs.\n\n*(Note: We want to sample 5K values from the Group Count Map. As such, the sample step is used in conjuction w/ the 'local' option. Without 'local' we would be sampling the first 5K Maps, which is not what we want in this case.)*\n",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>Let's try something even more interesting. In the next cell we are charting the degree distribution for the entire graph.</p>\n<p>Some things to keep in mind:</p>\n<ul>\n<li>This can be an expensive operation on large graphs. If you have DSE Analytics and a large dataset then this type of operation would be best executed using Spark/OLAP.</li>\n<li>We're sampling the result in the following cell to make things manageable in the confines of the browser. This makes no difference for our example dataset, but it will come in handy when you start analyzing larger graphs.</li>\n</ul>\n<p><em>(Note: We want to sample 5K values from the Group Count Map. As such, the sample step is used in conjuction w/ the 'local' option. Without 'local' we would be sampling the first 5K Maps, which is not what we want in this case.)</em></p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "8836fc0d-af1f-4105-98bc-38c698c28d7d"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "6c560be6-59ab-4046-9c05-098e31de630a",
    "status" : "SUCCESS",
    "code" : "g.V().groupCount().by(bothE().count()).sample(local, 5000)",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ {
        "1" : 6,
        "2" : 1,
        "3" : 1,
        "5" : 1,
        "6" : 1,
        "7" : 2
      } ],
      "type" : "MAP",
      "truncated" : false,
      "duration" : 0,
      "id" : "5f4ff778-c0b8-44da-83e1-b2d3cec9980a"
    },
    "msg" : null,
    "dataViewType" : "LINE",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : "__domain",
        "yAxis" : "__range"
      }
    }
  }, {
    "id" : "6303096c-56fd-4728-b75d-9c2518ad1f36",
    "status" : "SUCCESS",
    "code" : "Keyboard Shortcuts\n==\nStudio provides many keyboard shortcuts. You can see them all via the Help ? Menu in the top right of this notebook. \n\nQuick hint: shift+enter to execute :)",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Keyboard Shortcuts</h1>\n<p>Studio provides many keyboard shortcuts. You can see them all via the Help ? Menu in the top right of this notebook.</p>\n<p>Quick hint: shift+enter to execute :)</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "1311a4bd-16e5-409d-afe6-1defe2f45a82"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "7d409e0a-677d-432b-82c1-d0eea4186da0",
    "status" : "SUCCESS",
    "code" : "A quick but important note on iteration!\n=========================\n\nThis tutorial is meant to introduce the features of DataStax Studio. It is not a primer on Gremlin. However, there is one common gotcha that you should be aware of when working with Gremlin in Studio, and that is the subtlty of \"Automatic Iteration\".\n\n**Let's start with a pop quiz.**\nWhat do you think the result of the next cell will be? Think about your answer and then run the cell.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>A quick but important note on iteration!</h1>\n<p>This tutorial is meant to introduce the features of DataStax Studio. It is not a primer on Gremlin. However, there is one common gotcha that you should be aware of when working with Gremlin in Studio, and that is the subtlty of &ldquo;Automatic Iteration&rdquo;.</p>\n<p><strong>Let's start with a pop quiz.</strong>\n<br  />What do you think the result of the next cell will be? Think about your answer and then run the cell.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "2262d0fe-0380-429b-9fdf-463531c4f772"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "d35419e6-a1dc-426e-8297-1667f0334d78",
    "status" : null,
    "code" : "g.V().drop();\ng.V().count()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : null,
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : null
  }, {
    "id" : "48e6ef6c-a0a3-4146-8f13-6fe22af10f61",
    "status" : "SUCCESS",
    "code" : "If you were expecting 0, don't feel bad. This is a common gotcha.\n\nHere is what you need to know:\n* The executor will automatically inspect the result of the final statement in each cell, and if that result is an Iterator or Iterable, then it is iterated by the executor and entries are returned sequentially.\n* Gremlin Traversals implement Iterator and are thus iterated by the executor, but ***only when they are the last statement***.\n* If you want to iterate a Traversal manually then simply finish the Traversal with the .iterate() Step.\n\nLet's take a look at one more example just to re-enforce this idea. We'll start with something very simple...",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>If you were expecting 0, don't feel bad. This is a common gotcha.</p>\n<p>Here is what you need to know:</p>\n<ul>\n<li>The executor will automatically inspect the result of the final statement in each cell, and if that result is an Iterator or Iterable, then it is iterated by the executor and entries are returned sequentially.</li>\n<li>Gremlin Traversals implement Iterator and are thus iterated by the executor, but <strong><em>only when they are the last statement</em></strong>.</li>\n<li>If you want to iterate a Traversal manually then simply finish the Traversal with the .iterate() Step.</li>\n</ul>\n<p>Let's take a look at one more example just to re-enforce this idea. We'll start with something very simple&hellip;</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "2e1af919-4c07-490b-ab9c-ff272b940073"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "7fd343d8-a23e-4511-b5c0-cf176a0ea85a",
    "status" : "SUCCESS",
    "code" : "g.V().values('name')",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ "hercules", "saturn", "tartarus", "sky", "sea", "alcmene", "jupiter", "pluto", "neptune", "nemean", "hydra", "cerberus" ],
      "type" : "STRING",
      "truncated" : false,
      "duration" : 0,
      "id" : "fad7a69a-0387-4ba2-a606-82f6360af22f"
    },
    "msg" : null,
    "dataViewType" : "RAW",
    "viewSettings" : null
  }, {
    "id" : "390f0892-32d6-46fa-84a8-0d5eccb393e6",
    "status" : "SUCCESS",
    "code" : "Based on the previous cell, you might think that assigning a statement like this to a variable would give you a Collection of names, but as shown below, this is in fact not the case. The following cell provides some insight into what is actually happening.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>Based on the previous cell, you might think that assigning a statement like this to a variable would give you a Collection of names, but as shown below, this is in fact not the case. The following cell provides some insight into what is actually happening.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "2305525a-1436-48dc-aa9c-e97de207521b"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "993486b1-84be-4c9c-b153-9d474a3c6366",
    "status" : "SUCCESS",
    "code" : "def traversal = g.V().values('name')\ntraversal.class.getName()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ "org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.DefaultGraphTraversal" ],
      "type" : "STRING",
      "truncated" : false,
      "duration" : 0,
      "id" : "7c8dcc0c-64cf-43cf-8644-601b57d7f7f2"
    },
    "msg" : null,
    "dataViewType" : "RAW",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      },
      "CODE" : {
        "hidden" : false
      }
    }
  }, {
    "id" : "ca93b3e3-0d5a-4027-bfd7-6d0c82a73310",
    "status" : "SUCCESS",
    "code" : "**All the first statement does is build a Traversal (which as we said before, is really just an Iterator) and assigns it to the variable 'traversal'**. For the sake of completeness, here is how you would actually get a Collection of the names.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p><strong>All the first statement does is build a Traversal (which as we said before, is really just an Iterator) and assigns it to the variable 'traversal'</strong>. For the sake of completeness, here is how you would actually get a Collection of the names.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "9fe8d14e-bed7-4477-bb25-39bc5a9548a9"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "80453a88-0655-423b-a2e4-dbafb278f55a",
    "status" : "SUCCESS",
    "code" : "def names = g.V().values('name').store('names').cap('names').next()",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ "hercules", "saturn", "sky", "tartarus", "sea", "alcmene", "neptune", "jupiter", "pluto", "hydra", "nemean", "cerberus" ],
      "type" : "STRING",
      "truncated" : false,
      "duration" : 82,
      "id" : "3e2d3fa4-1e3e-470f-86b2-d142abccc081"
    },
    "msg" : null,
    "dataViewType" : "RAW",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      }
    }
  }, {
    "id" : "075c15a1-9469-43d6-9ebd-5b02238bb3fe",
    "status" : "SUCCESS",
    "code" : "(and just in case you were wondering...)",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<p>(and just in case you were wondering&hellip;)</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "f9e54d60-ba46-46bd-aebd-0fb0e5c26529"
    },
    "msg" : null,
    "dataViewType" : null,
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "8a67e99d-d801-4b7e-abba-2b7235f5a672",
    "status" : "SUCCESS",
    "code" : "names instanceof Collection",
    "language" : "gremlin",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : [ true ],
      "type" : "MISC",
      "truncated" : false,
      "duration" : 38,
      "id" : "34bc3a2e-a93e-4c62-8a26-b9807bfb47a3"
    },
    "msg" : null,
    "dataViewType" : "RAW",
    "viewSettings" : {
      "CHART" : {
        "xAxis" : null,
        "yAxis" : null
      }
    }
  }, {
    "id" : "0bbc4f30-f64c-42b7-9790-a4ad51e9e674",
    "status" : "SUCCESS",
    "code" : "The Notebook Session\n====================\n\nDid you notice in the previous example that we defined the variable 'names' in one cell and used it in the next? Each notebook has a Session that stores the variables you create. So feel free to break your ideas up into multiple cells however you like.\n\nKeep in mind that these sessions do expire after 24 hours or when the server-side C* node shuts down.",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>The Notebook Session</h1>\n<p>Did you notice in the previous example that we defined the variable 'names' in one cell and used it in the next? Each notebook has a Session that stores the variables you create. So feel free to break your ideas up into multiple cells however you like.</p>\n<p>Keep in mind that these sessions do expire after 24 hours or when the server-side C* node shuts down.</p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "3719b74a-aaee-4081-8af9-a861ec9f8895"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  }, {
    "id" : "819d9c43-8355-41fa-8a1b-9fd0f021cbf0",
    "status" : "SUCCESS",
    "code" : "Thank You!!!\n============\n\n**That's all for now. We here at DataStax hope you enjoy using Studio. Best of luck!**\n",
    "language" : "markdown",
    "gremlinExecutionEngine" : null,
    "result" : {
      "value" : "<h1>Thank You!!!</h1>\n<p><strong>That's all for now. We here at DataStax hope you enjoy using Studio. Best of luck!</strong></p>\n",
      "type" : "HTML",
      "truncated" : false,
      "duration" : 0,
      "id" : "d091a46d-e16e-44b3-9fec-0c1f4b94e745"
    },
    "msg" : null,
    "dataViewType" : "TABLE",
    "viewSettings" : {
      "CODE" : {
        "hidden" : true
      }
    }
  } ],
  "created" : "2016-02-26T23:01:42.260Z",
  "lastUsed" : "2016-04-19T04:33:59.478Z"
}