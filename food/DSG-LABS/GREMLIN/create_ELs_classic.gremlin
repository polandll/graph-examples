// Create edge labels for a Classic graph

// ********
// EDGE LABELS
// ********
// SYNTAX:
//schema.edgeLabel('edgeLabel').
//    [ single() | multiple() ].
//    [ connection( outVertex, inVertex) ].
//    [ ttl ].
//    [ properties(property[, property]) ].
//    [ ifNotExists() ].
//    [ create() | add() | describe() | exists() ]
// DEFAULT IS MULTIPLE CARDINALITY
// ********

schema.edgeLabel('authored').multiple().ifNotExists().create()
schema.edgeLabel('authored').connection('person', 'book').add()

schema.edgeLabel('created').multiple().ifNotExists().create()
schema.edgeLabel('created').properties('create_date').add()
schema.edgeLabel('created').connection('person', 'recipe').add()

schema.edgeLabel('knows').multiple().ifNotExists().create()
schema.edgeLabel('knows').properties('since').add()
schema.edgeLabel('knows').connection('person','person').add()

schema.edgeLabel('reviewed').multiple().ifNotExists().create()
schema.edgeLabel('reviewed').properties('time','year','stars','comment').add()
schema.edgeLabel('reviewed').connection('person','recipe').add()

schema.edgeLabel('ate').multiple().ifNotExists().create()
schema.edgeLabel('ate').properties('meal_date').add()
schema.edgeLabel('ate').connection('person', 'meal').add()

schema.edgeLabel('includes').multiple().ifNotExists().create()
schema.edgeLabel('includes').properties('num_serv').add()
schema.edgeLabel('includes').connection('meal','meal_item').add()

schema.edgeLabel('included_in').multiple().ifNotExists().create()
schema.edgeLabel('included_in').properties('amount').add()
schema.edgeLabel('included_in').connection('recipe','meal').add()
schema.edgeLabel('included_in').connection('meal','book').add()
schema.edgeLabel('included_in').connection('recipe','book').add()
schema.edgeLabel('included_in').connection('ingredient','recipe').add()

schema.edgeLabel('is_located_at').multiple().ifNotExists().create()
schema.edgeLabel('is_located_at').connection('home','location').add()
schema.edgeLabel('is_located_at').connection('store','location').add()
schema.edgeLabel('is_located_at').connection('fridge_sensor','home').add()

schema.edgeLabel('contains').multiple().ttl(60800).ifNotExists().create()
schema.edgeLabel('contains').properties('expire_date').add()
schema.edgeLabel('contains').connection('fridge_sensor','ingredient').add()

schema.edgeLabel('is_stocked_with').multiple().ttl(60800).ifNotExists().create()
schema.edgeLabel('is_stocked_with').properties('expire_date').add()
schema.edgeLabel('is_stocked_with').connection('store','ingredient').add()
