// *****
// BETTER TO RE-ADDV IN ADDE THAN TO DO A SEARCH BY ID FOR A VERTEX IN THE ADDE STATEMENTS
g.V().has("software", "name", "ferma").as("f")
    .addV("person").property("name", "bryn").property("age", 21).as("bryn")
    .addE("developed").property("qty", 100).from("bryn").to("f").count()
g.V().has("software", "name", "ferma").as("f")
    .V().has("person", "name", "marko").as("marko")
    .addE("developed").property("qty", 0).from("marko").to("f").count()
// *****

// Generates all Recipe Toy Graph vertices and edges except Reviews

// Add all vertices and edges for Recipe
g.V().drop().iterate()

// person vertices
g.addV('person')
  .property('person_id', UUID.fromString("bb6d7af7-f674-4de7-8b4c-c0fdcdaa5cca"))
  .property('name', 'Julia CHILD')
  .property('gender','F')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("adb8744c-d015-4d78-918a-d7f062c59e8f"))
  .property('name', 'Simone BECK')
  .property('gender','F')
  .property('nickname', setOf(Text).create('Simca', 'Simone'))
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("888ad970-0efc-4e2c-b234-b6a71c30efb5"))
  .property('name', 'Fritz STREIFF')
  .property('gender','M')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("f092107c-0c5c-47e7-917c-c82c7fc2a2493"))
  .property('name', 'Louisette BERTHOLIE')
  .property('gender','F')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("ef811281-f954-4fd6-ace0-bf67d057771a"))
  .property('name', 'Patricia SIMON')
  .property('gender','F')
  .property('nickname', setOf(Text).create('Pat'))
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("d45c76bc-6f93-4d0e-9d9f-33298dae0524"))
  .property('name', 'Alice WATERS')
  .property('gender','F')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("7f969e16-b81e-4fcd-87c5-1911abbed132"))
  .property('name', 'Patricia CURTAN')
  .property('gender','F')
  .property('nickname', setOf(Text).create('Pattie'))
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("01e22ca6-da10-4cf7-8903-9b7e30c25805"))
  .property('name', 'Kelsie KERR')
  .property('gender','F')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("ad58b8bd-033f-48ee-8f3b-a84f9c24e7de"))
  .property('name', 'Emeril LAGASSE')
  .property('gender','M')
  .iterate();
g.addV('person')
  .property('person_id', UUID.fromString("4ce9caf1-25b8-468e-a983-69bad20c017a"))
  .property('name', 'James BEARD')
  .property('gender','M')
  .property('nickname', setOf(Text).create('Jim', 'Jimmy'))
  .iterate();

// book vertices
g.addV('book')
   .property('book_id',1001)
   .property('name','The Art of French Cooking, Vol. 1')
   .property('publish_year',1961)
g.addV('book')
   .property('bookId', 1002)
   .property('name',"Simca's Cuisine: 100 Classic French Recipes for Every Occasion")
   .property('publish_year', 1972)
   .property('isbn', '0-394-40152-2')
g.addV('book')
   .property('bookId', 1003)
   .property('name','The French Chef Cookbook')
   .property('publish_year', 1968)
   .property('isbn', '0-394-40135-2')
g.addV('book')
   .property('bookId', 1004)
   .property('name', 'The Art of Simple Food: Notes, Lessons, and Recipes from a Delicious Revolution')
   .property('publish_year', 2007)
   .property('isbn', '0-307-33679-4')

g.addV('book')
  .property('book_id',1001)
  .property('name',"The Art of French Cooking, Vol. 1")
  .property('publish_year', 1961)
  .property('category', setOf(Text).create('French', 'American'))
  .property('authors', Arrays.asList(typeOf('fullname').create('BECK', 'Simone'), typeOf('fullname').create('CHILD', 'Julia')))
  .iterate();

g.addV('book')
  .property('book_id',1002)
  .property('name',"Simca's Cuisine: 100 Classic French Recipes for Every Occasion")
  .property('isbn', '0-394-40152-2')
  .property('publish_year', 1972)
  .property('category', setOf(Text).create('French', 'American'))
  .property('authors', Arrays.asList(typeOf('fullname').create('BECK', 'Simone')))
  .iterate();

g.addV('book')
  .property('book_id',1003)
  .property('name','The French Chef Cookbook')
  .property('isbn', '0-394-40135-2')
  .property('publish_year', 1968)
  .property('category', setOf(Text).create('French'))
  .property('authors', Arrays.asList(typeOf('fullname').create('CHILD', 'Julia')))
  .iterate();

g.addV('book')
  .property('book_id',1004)
  .property('name','The Art of Simple Food: Notes, Lessons, and Recipes from a Delicious Revolution')
  .property('isbn', '0-307-33679-4')
  .property('publish_year', 2007)
  .property('category', setOf(Text).create('American'))
  .property('authors', Arrays.asList(typeOf('fullname').create('WATERS', 'Alice'), typeOf('fullname').create('CURTAN', 'Patricia'), typeOf('fullname').create('KERR', 'Kelsie'), typeOf('fullname').create('STREIFF', 'Fritz')))
  .iterate();

// recipe vertices
g.addV('recipe')
   .property('recipeId', 2001)
   .property('name', 'Beef Bourguignon')
   .property('cuisine', setOf(Text).create('French', 'entree', 'beef'))
   .property('instructions', 'Braise the beef. Saute the onions and carrots. Add wine and cook in a dutch oven at 425 degrees for 1 hour.')
   .property('notes', 'Takes a long time to make.')
   .iterate()
   
g.addV('recipe')
   .property('recipeId', 2002)
   .property('name', 'Rataouille')
   .property('instructions', 'Peel and cut the egglant. Make sure you cut eggplant into lengthwise slices that are about 1-inch wmyIde, 3-inches long, and 3/8-inch thick')
   .property('notes', "I've made this 13 times.")
   .iterate()
g.addV('recipe')
   .property('recipeId', 2003)
   .property('name', 'Salade Nicoise')
   .property('instructions', 'Take a salad bowl or platter and line it with lettuce leaves, shortly before serving. Drizzle some olive oil on the leaves and dust them with salt.')
   .property('notes', '')
   .iterate()
g.addV('recipe')
   .property('recipeId', 2004)
   .property('name', 'Wild Mushroom Stroganoff')
   .property('instructions', 'Cook the egg noodles according to the package directions and keep warm. Heat 1 1/2 tablespoons of the oliveoil in a large saute pan over medium-high heat.')
   .property('notes', 'Good for Jan and Bill.')
   .iterate()
g.addV('recipe')
   .property('recipeId', 2005)
   .property('name', 'Spicy Meatloaf')
   .property('instructions', 'Preheat the oven to 375 degrees F. Cook bacon in a large skillet over medium heat until very crisp and fat has rendered, 8-10 minutes.')
   .property('notes', ' ')
   .iterate()
g.addV('recipe')
   .property('recipeId', 2006) 
   .property('name', 'Oysters Rockefeller')
   .property('instructions', 'Saute the shallots, celery, herbs, and seasonings in 3 tablespoons of the butter for 3 minutes. Add the watercress and let it wilt.')
   .property('notes', ' ')
   .iterate()
g.addV('recipe')
   .property('recipeId', 2007)
   .property('name', 'Carrot Soup') 
   .property('instructions', 'In a heavy-bottomed pot, melt the butter. When it starts to foam, add the onions and thyme and cook over medium-low heat until tender, about 10 minutes.')
   .property('notes', 'Quick and easy.')
   .iterate()
g.addV('recipe')
   .property('recipeId', 2008)
   .property('name', 'Roast Pork Loin')
   .property('instructions', 'The day before, separate the meat from the ribs, stopping about 1 inch before the end of the bones. Season the pork liberally inside and out with salt and pepper and refrigerate overnight.')
   .property('notes', 'Love this one!')
   .iterate()

// ingredients vertices
g.addV('ingredient')
  .property('ingred_id', 3001)
  .property('name', 'beef')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3002)
  .property('name', 'onion')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3003) 
  .property('name', 'mashed garlic')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3004) 
  .property('name', 'butter')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3005) 
  .property('name', 'tomato paste')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3006) 
  .property('name', 'eggplant')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3007) 
  .property('name', 'zucchini')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3008) 
  .property('name', 'olive oil')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3009) 
  .property('name', 'yellow onion')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3010) 
  .property('name', 'green beans')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3011) 
  .property('name', 'tuna')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3012) 
  .property('name', 'tomato')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3013) 
  .property('name', 'hard-boiled egg')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3014) 
  .property('name', 'egg noodles')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3015) 
  .property('name', 'mushrooms')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3016) 
  .property('name', 'bacon')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3017) 
  .property('name', 'celery')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3018) 
  .property('name', 'green bell pepper')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3019) 
  .property('name', 'ground beef')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3020) 
  .property('name', 'pork sausage')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3021) 
  .property('name', 'shallots')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3022) 
  .property('name', 'chervil')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3023) 
  .property('name', 'fennel')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3024) 
  .property('name', 'parsley')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3025) 
  .property('name', 'oyster')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3026) 
  .property('name', 'Pernod')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3027) 
  .property('name', 'thyme')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3028) 
  .property('name', 'carrots')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3029) 
  .property('name', 'chicken broth')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3030) 
  .property('name', 'pork loin')
   .iterate()
g.addV('ingredient')
  .property('ingred_id', 3031) 
  .property('name', 'red wine')
   .iterate()

// meal vertices
meal1 = g.addV('meal', 'mealId', 4001, 'type', 'lunch')
meal2 = g.addV('meal', 'mealId', 4002, 'type', 'lunch')
meal3 = g.addV('meal', 'mealId', 4003, 'type', 'lunch')
meal4 = g.addV('meal', 'mealId', 4004, 'type', 'lunch')
meal5 = g.addV('meal', 'mealId', 4005, 'type', 'breakfast')
meal6 = g.addV('meal', 'mealId', 4006, 'type', 'snack')
meal7 = g.addV('meal', 'mealId', 4007, 'type', 'dinner')
meal8 = g.addV('meal', 'mealId', 4008, 'type', 'dinner')
//SaturdayFeast = g.addV('meal', 'name', 'Saturday Feast', 'timestamp', Instant.parse('2015-11-30T00:00:00.00Z'), 'calories', 1000)
//EverydayDinner = g.addV('meal', 'name', 'EverydayDinner', 'timestamp', Instant.parse('2016-01-14T00:00:00.00Z'), 'calories', 600)
//JuliaDinner = g.addV('meal', 'name', 'JuliaDinner', 'timestamp', Instant.parse('2016-01-14T00:00:00.00Z'), 'calories', 900)

// author-book edges
g.V().has('person', 'person_id', 1).as('jc')
    .V().has('book', 'book_id', 1001).as('art')
    .addE('authored').from('jc').to('art')

juliaChild.addEdge('authored', artOfFrenchCookingVolOne)
simoneBeck.addEdge('authored', artOfFrenchCookingVolOne)
louisetteBertholie.addEdge('authored', artOfFrenchCookingVolOne)
simoneBeck.addEdge('authored', simcasCuisine)
patriciaSimon.addEdge('authored', simcasCuisine)
juliaChild.addEdge('authored', frenchChefCookbook)
aliceWaters.addEdge('authored', artOfSimpleFood)
patriciaCurtan.addEdge('authored', artOfSimpleFood)
kelsieKerr.addEdge('authored', artOfSimpleFood)
fritzStreiff.addEdge('authored', artOfSimpleFood)

// author - recipe edges
g.V().has('person', 'person_id', 1).as('jc')
   .V().has('recipe', 'recipe_id', 2001).as('bb')
   .addE('created').property('createDate', 1961-01-01).from('jc').to('bb')

juliaChild.addEdge('created', beefBourguignon, 'createDate', 1961-01-01)
juliaChild.addEdge('created', ratatouille, 'createDate', 1965-02-02)
juliaChild.addEdge('created', saladeNicoise, 'createDate', 1962-03-03)
emerilLagasse.addEdge('created', wildMushroomStroganoff, 'createDate', 2003-04-04)
emerilLagasse.addEdge('created', spicyMeatloaf, 'createDate', 2000-05-05)
aliceWaters.addEdge('created', carrotSoup, 'createDate', 1995-06-06)
aliceWaters.addEdge('created', roastPorkLoin, 'createDate', 1996-07-07)
jamesBeard.addEdge('created', oystersRockefeller, 'createDate', 1970-01-01)

// recipe - ingredient edges
beefBourguignon.addEdge('includedIn', beef, 'amount', '2 lbs')
beefBourguignon.addEdge('includedIn', onion, 'amount', '1 sliced')
beefBourguignon.addEdge('includedIn', mashedGarlic, 'amount', '2 cloves')
beefBourguignon.addEdge('includedIn', butter, 'amount', '3.5 Tbsp')
beefBourguignon.addEdge('includedIn', tomatoPaste, 'amount', '1 Tbsp')
ratatouille.addEdge('includedIn', eggplant, 'amount', '1 lb')
ratatouille.addEdge('includedIn', zucchini, 'amount', '1 lb')
ratatouille.addEdge('includedIn', mashedGarlic, 'amount', '2 cloves')
ratatouille.addEdge('includedIn', oliveOil, 'amount', '4-6 Tbsp')
ratatouille.addEdge('includedIn', yellowOnion, 'amount', '1 1/2 cups or 1/2 lb thinly sliced')
saladeNicoise.addEdge('includedIn', oliveOil, 'amount', '2-3 Tbsp')
saladeNicoise.addEdge('includedIn', greenBean, 'amount', '1 1/2 lbs blanched, trimmed')
saladeNicoise.addEdge('includedIn', tuna, 'amount', '8-10 ozs oil-packed, drained and flaked')
saladeNicoise.addEdge('includedIn', tomato, 'amount', '3 or 4 red, peeled, quartered, cored, and seasoned')
saladeNicoise.addEdge('includedIn', hardBoiledEgg, 'amount', '8 halved lengthwise')
wildMushroomStroganoff.addEdge('includedIn', eggNoodles, 'amount', '16 ozs wmyIde')
wildMushroomStroganoff.addEdge('includedIn', mushroom, 'amount', '2 lbs wild or exotic, cleaned, stemmed, and sliced')
wildMushroomStroganoff.addEdge('includedIn', yellowOnion, 'amount', '1 cup thinly sliced')
spicyMeatloaf.addEdge('includedIn', bacon, 'amount', '3 ozs diced')
spicyMeatloaf.addEdge('includedIn', onion, 'amount', '2 cups finely chopped')
spicyMeatloaf.addEdge('includedIn', celery, 'amount', '2 cups finely chopped')
spicyMeatloaf.addEdge('includedIn', greenBellPepper, 'amount', '1/4 cup finely chopped')
spicyMeatloaf.addEdge('includedIn', porkSausage, 'amount', '3/4 lbs hot')
spicyMeatloaf.addEdge('includedIn', groundBeef, 'amount', '1 1/2 lbs chuck')
oystersRockefeller.addEdge('includedIn', shallot, 'amount', '1/4 cup chopped')
oystersRockefeller.addEdge('includedIn', celery, 'amount', '1/4 cup chopped')
oystersRockefeller.addEdge('includedIn', chervil, 'amount', '1 tsp')
oystersRockefeller.addEdge('includedIn', fennel, 'amount', '1/3 cup chopped')
oystersRockefeller.addEdge('includedIn', parsley, 'amount', '1/3 cup chopped')
oystersRockefeller.addEdge('includedIn', oyster, 'amount', '2 dozen on the half shell')
oystersRockefeller.addEdge('includedIn', pernod, 'amount', '1/3 cup')
carrotSoup.addEdge('includedIn', butter, 'amount', '4 Tbsp')
carrotSoup.addEdge('includedIn', onion, 'amount', '2 medium sliced')
carrotSoup.addEdge('includedIn', thyme, 'amount', '1 sprig')
carrotSoup.addEdge('includedIn', carrot, 'amount', '2 1/2 lbs, peeled and sliced')
carrotSoup.addEdge('includedIn', chickenBroth, 'amount', '6 cups')
roastPorkLoin.addEdge('includedIn', porkLoin, 'amount', '1 bone-in, 4-rib')
roastPorkLoin.addEdge('includedIn', redWine, 'amount', '1/2 cup')
roastPorkLoin.addEdge('includedIn', chickenBroth, 'amount', '1 cup')

// book - recipe edges
beefBourguignon.addEdge('includedIn', artOfFrenchCookingVolOne)
saladeNicoise.addEdge('includedIn', artOfFrenchCookingVolOne)
carrotSoup.addEdge('includedIn', artOfSimpleFood)

// meal - recipe edges
beefBourguignon.addEdge('includedIn', meal1)
saladeNicoise.addEdge('includedIn', meal1)
carrotSoup.addEdge('includedIn', meal4)
roastPorkLoin.addEdge('includedIn', meal4)


// meal - book edges
meal7.addEdge('includedIn', artOfFrenchCookingVolOne)
meal8.addEdge('includedIn', artOfSimpleFood)
meal5.addEdge('includedIn', frenchChefCookbook)
g.V()
